# Secret Detection Rules - For API keys, passwords, tokens, etc.
# Each rule can be individually enabled/disabled

settings:
  enabled: true  # Master switch for all secret rules
  default_severity: HIGH
  
rules:
  # AWS Credentials
  aws_access_key:
    enabled: true
    name: "AWS Access Key ID"
    description: "Detects AWS Access Key IDs"
    patterns:
      - '\b(AKIA[0-9A-Z]{16})\b'
      - '\b(ASIA[0-9A-Z]{16})\b'  # Temporary security credentials
    severity: CRITICAL
    tags: ['aws', 'cloud', 'credentials']
    remediation: "Use AWS IAM roles or environment variables instead of hardcoded keys"
    
  aws_secret_key:
    enabled: true
    name: "AWS Secret Access Key"
    description: "Detects AWS Secret Access Keys"
    patterns:
      - "(?i)aws_secret[_\\s]*(?:access)?[_\\s]*key[_\\s]*[:=][_\\s]*[\"']?[A-Za-z0-9/+=]{40}[\"']?"
    severity: CRITICAL
    tags: ['aws', 'cloud', 'credentials']
    remediation: "Never hardcode AWS secret keys. Use IAM roles or AWS Secrets Manager"
    
  # GitHub Tokens (Enhanced pattern)
  github_token:
    enabled: true
    name: "GitHub Personal Access Token"
    description: "Detects GitHub personal access tokens"
    patterns:
      - '\b((?:ghp|gho|ghu|ghs|ghr|github_pat)_[a-zA-Z0-9_]{35,255})\b'
    severity: CRITICAL
    tags: ['github', 'vcs', 'token']
    remediation: "Revoke the token immediately and use GitHub Secrets"
    exclude_patterns:
      - 'ghp_example'
      - 'ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
    exclude_files:
      - '*test*'
      - '*example*'
      - '*.md'
      
  # Google Cloud
  google_api_key:
    enabled: true
    name: "Google API Key"
    description: "Detects Google API Keys"
    patterns:
      - 'AIza[0-9A-Za-z\\-_]{35}'
    severity: HIGH
    tags: ['google', 'cloud', 'api_key']
    remediation: "Use Google Cloud service accounts instead of API keys"
    
  # Azure
  azure_subscription_key:
    enabled: true
    name: "Azure Subscription Key"
    description: "Detects Azure subscription keys"
    patterns:
      - "(?i)subscription[_\\s]*key[_\\s]*[:=][_\\s]*[\"']?[a-f0-9]{32}[\"']?"
    severity: HIGH
    tags: ['azure', 'cloud', 'credentials']
    remediation: "Use Azure Key Vault or managed identities"
    
  # OpenAI / Anthropic
  openai_api_key:
    enabled: true
    name: "OpenAI API Key"
    description: "Detects OpenAI API keys"
    patterns:
      - 'sk-[a-zA-Z0-9]{48}'
      - 'sk-proj-[a-zA-Z0-9]{48}'
    severity: CRITICAL
    tags: ['openai', 'ai', 'api_key']
    remediation: "Store API keys in environment variables or secure vaults"
    
  anthropic_api_key:
    enabled: true
    name: "Anthropic API Key"
    description: "Detects Anthropic API keys"
    patterns:
      - '\b(sk-ant-(?:admin01|api03)-[\w\-]{93}AA)\b'
    severity: CRITICAL
    tags: ['anthropic', 'ai', 'api_key']
    remediation: "Store API keys in environment variables or secure vaults"
    
  # Generic patterns
  generic_api_key:
    enabled: true
    name: "Generic API Key"
    description: "Detects generic API key patterns"
    patterns:
      - "(?i)api[_\\s]*key[_\\s]*[:=][_\\s]*[\"']?[a-zA-Z0-9_\\-]{32,}[\"']?"
      - "(?i)apikey[_\\s]*[:=][_\\s]*[\"']?[a-zA-Z0-9_\\-]{32,}[\"']?"
    severity: HIGH
    tags: ['api_key', 'generic']
    remediation: "Never hardcode API keys. Use environment variables or secret management systems"
    exclude_patterns:
      - 'your-api-key'
      - 'xxxx'
      - '<api'
      
  generic_secret:
    enabled: true
    name: "Generic Secret"
    description: "Detects generic secret patterns"
    patterns:
      - "(?i)secret[_\\s]*[:=][_\\s]*[\"']?[a-zA-Z0-9_\\-]{16,}[\"']?"
      - "(?i)password[_\\s]*[:=][_\\s]*[\"']?\\S{8,}[\"']?"
    severity: HIGH
    tags: ['secret', 'password', 'generic']
    remediation: "Use secure credential storage, never hardcode secrets"
    exclude_patterns:
      - 'password123'
      - 'changeme'
      - 'your-secret'
      
  private_key:
    enabled: true
    name: "Private Key"
    description: "Detects private cryptographic keys"
    patterns:
      - '-----BEGIN (RSA |EC |DSA |OPENSSH |PGP )?PRIVATE KEY( BLOCK)?-----'
      - '-----BEGIN ENCRYPTED PRIVATE KEY-----'
      - '-----BEGIN CERTIFICATE-----'
    severity: CRITICAL
    tags: ['crypto', 'private_key']
    remediation: "Never commit private keys. Use key management systems"
    
  # Additional patterns from popular services
  stripe_api_key:
    enabled: true
    name: "Stripe API Key"
    description: "Detects Stripe secret keys"
    patterns:
      - '[rs]k_live_[a-zA-Z0-9]{20,247}'
      - '[rs]k_test_[a-zA-Z0-9]{20,247}'
    severity: CRITICAL
    tags: ['stripe', 'payment', 'api_key']
    remediation: "Roll your Stripe API keys at https://dashboard.stripe.com/apikeys"
    
  slack_token:
    enabled: true
    name: "Slack Token"
    description: "Detects various Slack token types"
    patterns:
      - 'xoxb-[0-9]{10,13}-[0-9]{10,13}[a-zA-Z0-9\-]*'  # Bot token
      - 'xoxp-[0-9]{10,13}-[0-9]{10,13}[a-zA-Z0-9\-]*'  # User token
      - 'xoxa-[0-9]{10,13}-[0-9]{10,13}[a-zA-Z0-9\-]*'  # Workspace access token
      - 'xoxr-[0-9]{10,13}-[0-9]{10,13}[a-zA-Z0-9\-]*'  # Workspace refresh token
    severity: HIGH
    tags: ['slack', 'chat', 'token']
    remediation: "Revoke at https://api.slack.com/apps"
    
  digitalocean_token:
    enabled: true
    name: "DigitalOcean Personal Access Token"
    description: "Detects DigitalOcean API tokens"
    patterns:
      - '(?:digitalocean|ocean|do)[\s\S]{0,50}\b([A-Za-z0-9_-]{64})\b'
    severity: CRITICAL
    tags: ['digitalocean', 'cloud', 'token']
    remediation: "Revoke at https://cloud.digitalocean.com/account/api/tokens"
    
  sendgrid_api_key:
    enabled: true
    name: "SendGrid API Key"
    description: "Detects SendGrid API keys"
    patterns:
      - 'SG\.[a-zA-Z0-9_-]{22}\.[a-zA-Z0-9_-]{43}'
    severity: HIGH
    tags: ['sendgrid', 'email', 'api_key']
    remediation: "Revoke at https://app.sendgrid.com/settings/api_keys"
    
  twilio_credentials:
    enabled: true
    name: "Twilio Credentials"
    description: "Detects Twilio API keys and account SIDs"
    patterns:
      - 'SK[a-f0-9]{32}'  # API Key
      - 'AC[a-f0-9]{32}'  # Account SID
    severity: HIGH
    tags: ['twilio', 'sms', 'api_key']
    remediation: "Revoke at https://console.twilio.com/console/project/api-keys"
    
  jwt_token:
    enabled: true
    name: "JWT Token"
    description: "Detects JSON Web Tokens"
    patterns:
      - 'eyJ[A-Za-z0-9_-]+\.eyJ[A-Za-z0-9_-]+\.[A-Za-z0-9_.-]+'
    severity: MEDIUM
    tags: ['jwt', 'token', 'auth']
    remediation: "JWT tokens should be short-lived. Ensure proper expiration is set"
    exclude_patterns:
      - 'eyJhbGciOi'  # Common JWT header examples
      
  huggingface_token:
    enabled: true
    name: "HuggingFace API Token"
    description: "Detects HuggingFace API tokens"
    patterns:
      - '\b(?:hf_|api_org_)[a-zA-Z0-9]{34}\b'
    severity: HIGH
    tags: ['huggingface', 'ai', 'api_key']
    remediation: "Revoke at https://huggingface.co/settings/tokens and use environment variables"